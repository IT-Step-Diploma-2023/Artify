// <auto-generated />
using System;
using Artify.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Artify.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230805144808_03_db_fix")]
    partial class _03_db_fix
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AlbumShot", b =>
                {
                    b.Property<int>("AlbumsId")
                        .HasColumnType("int");

                    b.Property<int>("ShotsId")
                        .HasColumnType("int");

                    b.HasKey("AlbumsId", "ShotsId");

                    b.HasIndex("ShotsId");

                    b.ToTable("AlbumShot");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Album", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Albums");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.Appreciation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ShotId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShotId");

                    b.HasIndex("UserId");

                    b.ToTable("Appreciations");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.Genre", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.ShotComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ShotId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShotId");

                    b.HasIndex("UserId");

                    b.ToTable("ShotComments");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.Tag", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tags");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.Tool", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Tools");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Image", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("money");

                    b.Property<int>("ShotId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ShotId");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Shot", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Shots");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Billing", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CardCVV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CardExp")
                        .HasColumnType("datetime2");

                    b.Property<string>("CardHolderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Billings");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Employer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Employers");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Follower", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Followers");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.SocialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SocialProfiles");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.UserEmployerComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("UserId");

                    b.ToTable("UserEmployerComments");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.UserSocialProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SocialProfileId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SocialProfileId");

                    b.HasIndex("UserId");

                    b.ToTable("UserSocialProfiles");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Vacancy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmpType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmployerId")
                        .HasColumnType("int");

                    b.Property<bool>("InBest")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemoteAvailable")
                        .HasColumnType("int");

                    b.Property<string>("Salary")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpecialityId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmployerId");

                    b.HasIndex("SpecialityId");

                    b.ToTable("Vacancies");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Permission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Tag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Biography")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Info")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LogoImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WebSite")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.HasIndex("TeamId");

                    b.ToTable("Users");

                    b.HasDiscriminator<string>("Discriminator").HasValue("User");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.UserRole", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InheritedRoleId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserRoles");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.Education", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Degree")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FinishYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Institution")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("StartYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Educations");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.FreelanceAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("FixedPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("money");

                    b.Property<int>("MinContractHours")
                        .HasColumnType("int");

                    b.Property<decimal>("MinHourlyRate")
                        .HasPrecision(18, 2)
                        .HasColumnType("money");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("FreelanceAvailabilities");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.FullTimeAvailability", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RemoteAvailable")
                        .HasColumnType("int");

                    b.Property<int?>("SalaryId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SalaryId");

                    b.HasIndex("UserId");

                    b.ToTable("FullTimeAvailabilities");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.Job", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("FinishYear")
                        .HasColumnType("datetime2");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<DateTime>("StartYear")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Jobs");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.Salary", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("MaxSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("money");

                    b.Property<decimal>("MinSalary")
                        .HasPrecision(18, 2)
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.ToTable("Salaries");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.Speciality", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Specialities");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.WorkPreference", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("FreelanceAvailabilityId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("FullTimeAvailabilityId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<string>("Skills")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FreelanceAvailabilityId");

                    b.HasIndex("FullTimeAvailabilityId");

                    b.HasIndex("UserId");

                    b.ToTable("WorkPreferences");
                });

            modelBuilder.Entity("BillingUser", b =>
                {
                    b.Property<int>("BillingsId")
                        .HasColumnType("int");

                    b.Property<int>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("BillingsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("BillingUser");
                });

            modelBuilder.Entity("EducationWorkPreference", b =>
                {
                    b.Property<int>("EducationsId")
                        .HasColumnType("int");

                    b.Property<int>("WorkPreferencesId")
                        .HasColumnType("int");

                    b.HasKey("EducationsId", "WorkPreferencesId");

                    b.HasIndex("WorkPreferencesId");

                    b.ToTable("EducationWorkPreference");
                });

            modelBuilder.Entity("GenreShot", b =>
                {
                    b.Property<int>("GenresId")
                        .HasColumnType("int");

                    b.Property<int>("ShotsId")
                        .HasColumnType("int");

                    b.HasKey("GenresId", "ShotsId");

                    b.HasIndex("ShotsId");

                    b.ToTable("GenreShot");
                });

            modelBuilder.Entity("JobWorkPreference", b =>
                {
                    b.Property<int>("JobsId")
                        .HasColumnType("int");

                    b.Property<int>("WorkPreferencesId")
                        .HasColumnType("int");

                    b.HasKey("JobsId", "WorkPreferencesId");

                    b.HasIndex("WorkPreferencesId");

                    b.ToTable("JobWorkPreference");
                });

            modelBuilder.Entity("PermissionUserRole", b =>
                {
                    b.Property<int>("PermissionsId")
                        .HasColumnType("int");

                    b.Property<int>("RolesId")
                        .HasColumnType("int");

                    b.HasKey("PermissionsId", "RolesId");

                    b.HasIndex("RolesId");

                    b.ToTable("PermissionUserRole");
                });

            modelBuilder.Entity("ProjectShot", b =>
                {
                    b.Property<int>("ProjectsId")
                        .HasColumnType("int");

                    b.Property<int>("ShotsId")
                        .HasColumnType("int");

                    b.HasKey("ProjectsId", "ShotsId");

                    b.HasIndex("ShotsId");

                    b.ToTable("ProjectShot");
                });

            modelBuilder.Entity("ShotTag", b =>
                {
                    b.Property<int>("ShotsId")
                        .HasColumnType("int");

                    b.Property<int>("TagsId")
                        .HasColumnType("int");

                    b.HasKey("ShotsId", "TagsId");

                    b.HasIndex("TagsId");

                    b.ToTable("ShotTag");
                });

            modelBuilder.Entity("ShotTool", b =>
                {
                    b.Property<int>("ShotsId")
                        .HasColumnType("int");

                    b.Property<int>("ToolsId")
                        .HasColumnType("int");

                    b.HasKey("ShotsId", "ToolsId");

                    b.HasIndex("ToolsId");

                    b.ToTable("ShotTool");
                });

            modelBuilder.Entity("SpecialityWorkPreference", b =>
                {
                    b.Property<int>("SpecialitiesId")
                        .HasColumnType("int");

                    b.Property<int>("WorkPreferencesId")
                        .HasColumnType("int");

                    b.HasKey("SpecialitiesId", "WorkPreferencesId");

                    b.HasIndex("WorkPreferencesId");

                    b.ToTable("SpecialityWorkPreference");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Team", b =>
                {
                    b.HasBaseType("Artify.Models.DbModels.Users.User");

                    b.HasDiscriminator().HasValue("Team");
                });

            modelBuilder.Entity("AlbumShot", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Album", null)
                        .WithMany()
                        .HasForeignKey("AlbumsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", null)
                        .WithMany()
                        .HasForeignKey("ShotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Album", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("Albums")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.Appreciation", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", "Shot")
                        .WithMany("Appreciations")
                        .HasForeignKey("ShotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", "Author")
                        .WithMany("Appreciations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Shot");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Attributes.ShotComment", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", "Shot")
                        .WithMany("ShotComments")
                        .HasForeignKey("ShotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", "Author")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Author");

                    b.Navigation("Shot");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Image", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", "Shot")
                        .WithMany("Images")
                        .HasForeignKey("ShotId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Shot");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Project", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("Projects")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Shot", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("Shots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Employer", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Follower", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("Followers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.UserEmployerComment", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.Attributes.Employer", "Employer")
                        .WithMany("UserEmployerComments")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("UserEmployerComments")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.UserSocialProfile", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.Attributes.SocialProfile", "SocialProfile")
                        .WithMany("UserSocialProfiles")
                        .HasForeignKey("SocialProfileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("UserSocialProfiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SocialProfile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Vacancy", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.Attributes.Employer", "Employer")
                        .WithMany("Vacancies")
                        .HasForeignKey("EmployerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.WorkPreferences.Speciality", "Speciality")
                        .WithMany("Vacancy")
                        .HasForeignKey("SpecialityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employer");

                    b.Navigation("Speciality");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.User", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.UserRole", "UserRole")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.Team", null)
                        .WithMany("Users")
                        .HasForeignKey("TeamId");

                    b.Navigation("UserRole");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.FreelanceAvailability", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("FreelanceAvailabilities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.FullTimeAvailability", b =>
                {
                    b.HasOne("Artify.Models.DbModels.WorkPreferences.Salary", "Salary")
                        .WithMany("FullTimeAvailabilities")
                        .HasForeignKey("SalaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("FullTimeAvailabilities")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Salary");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.WorkPreference", b =>
                {
                    b.HasOne("Artify.Models.DbModels.WorkPreferences.FreelanceAvailability", "FreelanceAvailability")
                        .WithMany("WorkPreferences")
                        .HasForeignKey("FreelanceAvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.WorkPreferences.FullTimeAvailability", "FullTimeAvailability")
                        .WithMany("WorkPreferences")
                        .HasForeignKey("FullTimeAvailabilityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", "User")
                        .WithMany("WorkPreferences")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FreelanceAvailability");

                    b.Navigation("FullTimeAvailability");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BillingUser", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.Attributes.Billing", null)
                        .WithMany()
                        .HasForeignKey("BillingsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.User", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EducationWorkPreference", b =>
                {
                    b.HasOne("Artify.Models.DbModels.WorkPreferences.Education", null)
                        .WithMany()
                        .HasForeignKey("EducationsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.WorkPreferences.WorkPreference", null)
                        .WithMany()
                        .HasForeignKey("WorkPreferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GenreShot", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Attributes.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", null)
                        .WithMany()
                        .HasForeignKey("ShotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("JobWorkPreference", b =>
                {
                    b.HasOne("Artify.Models.DbModels.WorkPreferences.Job", null)
                        .WithMany()
                        .HasForeignKey("JobsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.WorkPreferences.WorkPreference", null)
                        .WithMany()
                        .HasForeignKey("WorkPreferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PermissionUserRole", b =>
                {
                    b.HasOne("Artify.Models.DbModels.Users.Permission", null)
                        .WithMany()
                        .HasForeignKey("PermissionsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.Users.UserRole", null)
                        .WithMany()
                        .HasForeignKey("RolesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectShot", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", null)
                        .WithMany()
                        .HasForeignKey("ShotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShotTag", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", null)
                        .WithMany()
                        .HasForeignKey("ShotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Attributes.Tag", null)
                        .WithMany()
                        .HasForeignKey("TagsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ShotTool", b =>
                {
                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Shot", null)
                        .WithMany()
                        .HasForeignKey("ShotsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.DbModels.Artworks.Attributes.Tool", null)
                        .WithMany()
                        .HasForeignKey("ToolsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("SpecialityWorkPreference", b =>
                {
                    b.HasOne("Artify.Models.DbModels.WorkPreferences.Speciality", null)
                        .WithMany()
                        .HasForeignKey("SpecialitiesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Artify.Models.DbModels.WorkPreferences.WorkPreference", null)
                        .WithMany()
                        .HasForeignKey("WorkPreferencesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Artify.Models.DbModels.DbModels.Artworks.Shot", b =>
                {
                    b.Navigation("Appreciations");

                    b.Navigation("Images");

                    b.Navigation("ShotComments");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.Employer", b =>
                {
                    b.Navigation("UserEmployerComments");

                    b.Navigation("Vacancies");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Attributes.SocialProfile", b =>
                {
                    b.Navigation("UserSocialProfiles");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.User", b =>
                {
                    b.Navigation("Albums");

                    b.Navigation("Appreciations");

                    b.Navigation("Followers");

                    b.Navigation("FreelanceAvailabilities");

                    b.Navigation("FullTimeAvailabilities");

                    b.Navigation("Projects");

                    b.Navigation("Shots");

                    b.Navigation("UserEmployerComments");

                    b.Navigation("UserSocialProfiles");

                    b.Navigation("WorkPreferences");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.UserRole", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.FreelanceAvailability", b =>
                {
                    b.Navigation("WorkPreferences");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.FullTimeAvailability", b =>
                {
                    b.Navigation("WorkPreferences");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.Salary", b =>
                {
                    b.Navigation("FullTimeAvailabilities");
                });

            modelBuilder.Entity("Artify.Models.DbModels.WorkPreferences.Speciality", b =>
                {
                    b.Navigation("Vacancy");
                });

            modelBuilder.Entity("Artify.Models.DbModels.Users.Team", b =>
                {
                    b.Navigation("Users");
                });
#pragma warning restore 612, 618
        }
    }
}
